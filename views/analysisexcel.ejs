<% include header %>
<link rel="stylesheet" href="/content/analys/analysis.css">
<div id="vue1" v-cloak>
     <% if (IsAdmin) { %>
            <div class="ui segment">
                <a class="ui ribbon label">上传考勤文件</a><br />
                <div class="height15"></div>
                <div class="left22">
                    <div>文件命名：小写月份数字加汉字"月考勤"组成的xls文件，例如:7月考勤.xls</div>
                    <input id="xlsSelect" type="file" accept="application/vnd.ms-excel" name="file" />
                    <div class="ui vertical animated button small" tabindex="0" v-on:click="getData">
                        <div class="hidden content">上传</div>
                        <div class="visible content">
                            <i class="cloud upload icon"></i>
                        </div>
                    </div>
                </div>
            </div>
    <% } %>

    <div class="ui segment">
        <a class="ui ribbon label">展示说明</a>
        <div class="height15"></div>
        <div class="content-color">
            <div class="width13 left">外框：</div>
            <div class="width13 color-0 left">未到</div>
            <div class="width13 color-1 left">正常</div>
            <div class="width13 color-2 left">节/假日</div>
            <div class="clear" style="height:5px;"></div>
            <div class="width13 left">内框：</div>
            <div class="width13 child--3 left">迟到/早退</div>
            <div class="width13 child--1 left">早回家</div>
            <div class="width13 child-1 left">正常</div>
            <div class="width13 child-2 left">加班</div>
            <div class="clear" style="height:5px;"></div>
        </div>
    </div>
    <div class="ui segment">
        <a class="ui ribbon label">查询</a>
        <div class="left22">
            <div class="six column ui grid stackable group1" v-if="dk">
                <div class="column">迟到：<label v-bind:class="{'daycount':dk.chidao>0}">{{dk.chidao}}</label>/{{dk.oneMonthCount/2}}</div>
                <div class="column">早退：<label v-bind:class="{'daycount':dk.zaotui>0}">{{ dk.zaotui}}</label>/{{dk.oneMonthCount/2}}</div>
                <div class="column">早回家：<label v-bind:class="{'daycount':dk.zaoxiaban>0}">{{ dk.zaoxiaban}}</label>/{{dk.oneMonthCount/2}}</div>
                <div class="column">未打卡：<label v-bind:class="{'daycount':dk.weidaka>0}">{{dk.weidaka}}</label>/{{dk.oneMonthCount}}</div>
                <div class="column">整天未到：<label v-bind:class="{'daycount':dk.zhengtianweidaka>0}">{{dk.zhengtianweidaka}}</label>/{{dk.oneMonthCount/2}}</div>
                <div class="column">加班：<label v-bind:class="{'daycount':dk.jiaban>0}">{{dk.jiaban}}</label>/{{dk.oneMonthCount/2}}</div>
            </div>
            <div class="ui stackable margin-bottom10">
                <div class="ui selection dropdown medium small" id="selectMonth">
                    <input type="hidden" />
                    <i class="dropdown icon"></i>
                    <div class="default text">考勤月份</div>
                    <div class="menu">
                        <div class="item" data-value="1">1月</div>
                        <div class="item" data-value="2">2月</div>
                        <div class="item" data-value="3">3月</div>
                        <div class="item" data-value="4">4月</div>
                        <div class="item" data-value="5">5月</div>
                        <div class="item" data-value="6">6月</div>
                        <div class="item" data-value="7">7月</div>
                        <div class="item" data-value="8">8月</div>
                        <div class="item" data-value="9">9月</div>
                        <div class="item" data-value="10">10月</div>
                        <div class="item" data-value="11">11月</div>
                        <div class="item" data-value="12">12月</div>
                    </div>
                </div>
                <div class="ui icon input">
                    <input type="text" v-model="userName" placeholder="请输入查询的用户名" maxlength="6">
                    <i class="search icon"></i>
                </div>
            </div>
            <div class="month-content">
                <div class="left length-top">周一</div>
                <div class="left length-top">周二</div>
                <div class="left length-top">周三</div>
                <div class="left length-top">周四</div>
                <div class="left length-top">周五</div>
                <div class="left length-top">周六</div>
                <div class="left length-top">周日</div>
                <!--打卡Excel表没有出来用这个-->
                <div class="body-Day" v-if="!userMounthNullCount&&userMounthNulls&&userMounthNulls.dayNum > 27">
                    <div v-for="i in userMounthNulls.nullDays" class="left length">无</div>
                    <div v-for="day in userMounthNulls.dayNum" class="left length titlec">
                        <div class="select-day titlec" v-on:click="selectMarkNull(day,0)" v-bind:title="getMarkTitle(day,0,1)">
                            <strong>{{day}}</strong>
                            <div class="pull-right day-delete"
                                 v-if="isMarkDataNull(day,0)"
                                 v-on:click.stop="deleteMarkData(day,-1,1)"><i class="icon ban"></i></div>
                            <div v-if="isMarkDataNull(day,0,1)" class="pull-right day-ismark">注</div>
                            <div v-if="getIsPassNull(day,0)" class="pull-right titlec" title="审核状态" v-bind:class="{'day-bo':getIsPassNull(day,0)==2,'day-guo':getIsPassNull(day,0)==1}">{{getIsPassNull(day,0)==1?'过':'驳'}}</div>
                        </div>
                        <div class="padding-center child-10 titlec" v-on:click="selectMarkNull(day,1)" v-bind:title="getMarkTitle(day,1,1)">
                            早:----
                            <div class="pull-right day-delete"
                                 v-if="isMarkDataNull(day,1)"
                                 v-on:click.stop="deleteMarkData(day,1,1)"><i class="icon ban"></i></div>
                            <div v-if="getIsPassNull(day,1)" class="pull-right titlec" title="审核状态" v-bind:class="{'day-bo':getIsPassNull(day,1)==2,'day-guo':getIsPassNull(day,1)==1}">{{getIsPassNull(day,1)==1?'过':'驳'}}</div>
                        </div>
                        <div class="padding-center child-10 titlec" v-on:click="selectMarkNull(day,2)" v-bind:title="getMarkTitle(day,2,1)">
                            晚:----
                            <div class="pull-right day-delete"
                                 v-if="isMarkDataNull(day,2)"
                                 v-on:click.stop="deleteMarkData(day,2,1)"><i class="icon ban"></i></div>
                            <div v-if="getIsPassNull(day,2)" class="pull-right titlec" title="审核状态" v-bind:class="{'day-bo':getIsPassNull(day,2)==2,'day-guo':getIsPassNull(day,2)==1}">{{getIsPassNull(day,2)==1?'过':'驳'}}</div>
                        </div>
                    </div>
                </div>
                <!--打卡Excel表已经出来了-->
                <div class="body-Day" v-if="userMounthNullCount">
                    <div v-for="i in userMounthNullCount" class="left length">无</div>
                    <div v-for="child in userMounths" class="left length titlec" v-bind:class="'color-'+child.status" v-bind:title="getMarkTitle(child,0)">
                        <div class="" v-bind:class="{'select-day':child.status!=1&&child.status!=2}" v-on:click="selectMark(child,0,1)">
                            <strong v-if="child.status!=2">{{child.day}}</strong>
                            <div v-if="child.status==2&&child.dayOfWeek==7" style="color:#ccc;">{{child.day}} 休</div>
                            <div v-if="child.status==2&&child.dayOfWeek!=7" style="color:#ccc;">{{child.day}} 假</div>
                            <div class="pull-right day-delete"
                                 v-if="isMarkData(child,-1)&&child.status==0"
                                 v-on:click.stop="deleteMarkData(child,-1)"><i class="icon ban"></i></div>
                            <div v-if="isMarkData(child,-1)" class="pull-right day-ismark">注</div>
                            <div v-if="getIsPass(child,-1)&&child.status==0&&child.dayOfWeek!=7" class="pull-right titlec" title="审核状态" v-bind:class="{'day-bo':getIsPass(child,-1)==2,'day-guo':getIsPass(child,-1)==1}">{{getIsPass(child,-1)==1?'过':'驳'}}</div>
                        </div>
                        <div class="padding-center child-0 titlec"
                             v-if="!child.UserLeft&&child.status!=2&&child.status!=0"
                             v-on:click="selectMark(child,1)" v-bind:title="getMarkTitle(child,1)">
                            早:未打卡
                            <div v-if="isMarkData(child,1)" class="pull-right day-delete" v-on:click.stop="deleteMarkData(child,1)"><i class="icon ban"></i></div>
                            <div v-if="getIsPass(child,1)" class="pull-right titlec" title="审核状态" v-bind:class="{'day-bo':getIsPass(child,1)==2,'day-guo':getIsPass(child,1)==1}">{{getIsPass(child,1)==1?'过':'驳'}}</div>
                        </div>
                        <div v-if="child.UserLeft" class="padding-center">
                            <div class="titlec" v-if="child.UserLeft.putCaredTime"
                                 v-bind:class="'child-'+child.UserLeft.status"
                                 v-on:click.stop="selectMark(child,1)"
                                 v-bind:title="getMarkTitle(child,1)">
                                早:{{momentTime(child.UserLeft.putCaredTime)}}
                                <div class="pull-right day-delete"
                                     v-if="isMarkData(child,1)"
                                     v-on:click.stop="deleteMarkData(child,1)"><i class="icon ban"></i></div>
                                <div v-if="getIsPass(child,1)" class="pull-right titlec" title="审核状态" v-bind:class="{'day-bo':getIsPass(child,1)==2,'day-guo':getIsPass(child,1)==1}">{{getIsPass(child,1)==1?'过':'驳'}}</div>
                            </div>
                        </div>
                        <div class="padding-center child-0 titlec"
                             v-if="!child.UserRight&&child.status!=2&&child.status!=0"
                             v-on:click="selectMark(child,2)"
                             v-bind:title="getMarkTitle(child,2)">
                            晚:未打卡
                            <div v-if="isMarkData(child,2)"
                                 class="pull-right day-delete"
                                 v-on:click.stop="deleteMarkData(child,2)"><i class="icon ban"></i></div>
                            <div v-if="getIsPass(child,2)" class="pull-right titlec" title="审核状态" v-bind:class="{'day-bo':getIsPass(child,2)==2,'day-guo':getIsPass(child,2)==1}">{{getIsPass(child,2)==1?'过':'驳'}}</div>
                        </div>
                        <div v-if="child.UserRight" class="padding-center">
                            <div class="titlec" v-if="child.UserRight.putCaredTime"
                                 v-bind:class="'child-'+child.UserRight.status"
                                 v-on:click.stop="selectMark(child,2)"
                                 v-bind:title="getMarkTitle(child,2)">
                                晚:{{momentTime(child.UserRight.putCaredTime)}}
                                <div class="pull-right day-delete"
                                     v-if="isMarkData(child,2)"
                                     v-on:click.stop="deleteMarkData(child,2)"><i class="icon ban"></i></div>
                                <div v-if="getIsPass(child,2)" class="pull-right titlec" title="审核状态" v-bind:class="{'day-bo':getIsPass(child,2)==2,'day-guo':getIsPass(child,2)==1}">{{getIsPass(child,2)==1?'过':'驳'}}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clear"></div>
        </div>
    </div>
    <!--增,改打卡备注-->
    <div class="ui small modal" id="editMark">
        <div class="header" id="editMark-header">
            备注说明
        </div>
        <div class="content ui form">
            <div class="field">日期：<strong>{{addMarkData.ClockTime}}</strong></div>
            <div class="field">
                <strong>时间范围：</strong>
                <strong v-if="addMarkData.TimeSlot==0">整天</strong>
                <strong v-if="addMarkData.TimeSlot==1">上午</strong>
                <strong v-if="addMarkData.TimeSlot==2">下午</strong>
            </div>
            <div class="field">
                <div class="ui selection dropdown medium Small" id="selectMarkState">
                    <input type="hidden" name="gender" />
                    <i class="dropdown icon"></i>
                    <div class="default text">记录类别</div>
                    <div class="menu" id="markStatusMenu">
                    </div>
                </div>
            </div>
            <div class="field">
                <label>备注说明</label>
                <textarea rows="2" maxlength="100" placeholder="长度不大于100个字符" id="markReason" v-model="addMarkData.ClockContent"></textarea>
            </div>
        </div>
        <div class="actions">
            <div class="ui cancel button" id="btnCancle">取消 </div>
            <div class="ui positive right labeled icon button">确定 <i class="checkmark icon"></i> </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var __RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
    var userInfo = <%- User %>;
    function init(_self) {
        _self.markStateList.forEach(function (item, i) {
            $("#markStatusMenu").append("<div class='item' data-value=" + i + ">" + item + "</div>");
        });
        $('#editMark')
            .modal({
                blurring: true,
                onDeny: function () {
                    //这里调用取消
                },
                onApprove: function () {
                    _self.saveMark();
                }
            })
            .modal('hide');
        $('#selectMonth').dropdown('set value', _self.selectMonth);
        $('#selectMonth').dropdown('setting', 'onChange', function (val) {
            if (_self.selectMonth != parseInt(val)) {
                _self.selectMonth = parseInt(val);
            }
        });
        initBind(_self);
    }
    function initBind(_self) {
        $('#selectMarkState').dropdown('set value', _self.addMarkData.UDayStateId);
        $("#selectMarkState").dropdown({
            onChange: function (val) {
                _self.addMarkData.UDayStateId = parseInt(val);
            }
        });

    };

    var vm = new Vue({
        el: '#vue1',
        data: {
            userPunchCards: [],
            userName: userInfo.UserName,
            userMounthNullCount: 0,
            userMounths: [],
            userMounthNulls: {},//当月无数据时的结构
            selectMonth: parseInt(moment().subtract(1, 'month').format('MM')),
            addMarkData: {
                AttendanceId: -1,//打卡备注Id
                markIUD: -1,//操作类型:增,改,删
                UserId: -1,//用户Id
                ClockTime: '', //记录日期
                TimeSlot: -1,//时间段:全天,上午,下午
                UDayStateId: 0,//打卡状态
                ClockContent: '',//备注说明
                UserName: ''
            },
            addMarkInit: {
                AttendanceId: -1,//打卡备注Id
                markIUD: -1,//操作类型:增,改,删
                UserId: -1,//用户Id
                ClockTime: '', //记录日期
                TimeSlot: -1,//时间段:全天,上午,下午
                UDayStateId: 0,//打卡状态
                ClockContent: '',//备注说明
                UserName: ''
            },
            selectMarkData: {
                year: 2018,
                //userId: -1,
                userName: userInfo.UserName
            },
            showSingleDayRemark: [],//展示单天的打卡记录
            markStateList: ["请选择备注类别", "迟到", "早退", "早回家", "正常", "加班", "请假", "忘打卡"],
            cssMarkList: ['day-ismark', 'day-late', 'day-early', 'day-noclock'],
            isPassList: ['未审核', '审核通过','审核驳回'],
            markDatas: [],
            dk: {
                chidao: 0,
                zaotui: 0,
                zaoxiaban: 0,
                weidaka: 0,
                zhengtianweidaka: 0,
                jiaban: 0,
                oneMonthCount: 0
            }
        },
        components: {//组件

        },
        filters: {//过滤器

        },
        watch: {
            userName: function () {
                this.markDatas = [];
                this.selectUserName();
            },
            selectMonth: function () {
                this.userMounthNulls = {};
                this.markDatas = [];
                this.selectMonthData();
            }
        },
        mounted: function () {
            init(this);
            this.selectMonthData();
        },
        methods: {
            getData: function () {
                this.userPunchCards = [];
                this.userMounths = [];
                this.userMounthNullCount = 0;
                var fd = new FormData();
                fd.append("requestFile", $("#xlsSelect")[0].files[0]);
                $.ajax({
                    url: bhConfig.UploadXls,
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: fd,
                    success: function (d) {
                        if (d.MsgStatus) {
                            helper.toolTipBox(d.MsgContent);
                        } else {
                            helper.toolTipBox(d.MsgContent);
                        }
                    }
                });
            },
            momentTime: function (val) {
                if (val != null && val != undefined && val != '') {
                    return moment(val).format('HH:mm:ss');
                }
                return val;
            },
            calendarAssembly: function () {
                var jsonData = $.extend({}, this.userPunchCards);
            },
            selectUserName: function () {

                var thisMonth = localStorage.getItem(this.selectMonth);
                this.userPunchCards = [];
                if (thisMonth) {
                    thisMonth = JSON.parse(thisMonth);
                    this.userPunchCards = thisMonth;
                }

                if (this.userName == null || this.userName == '' || this.userName.length < 2) {
                    return;
                }
                this.userMounths = [];
                this.userMounthNullCount = 0;
                var temporary = this.userPunchCards[this.userName];
                if (temporary != undefined && temporary != null && temporary['day_1'].day == 1) {
                    this.userMounthNullCount = temporary['day_1'].dayOfWeek - 1;
                    this.userMounths = temporary;
                    this.selectMarkData.userName = this.userName;
                    this.getUserMarkData();//获取打卡备注
                    this.getCZWJ();//获取迟到早退未打卡加班内容集合
                }
                else if (!this.userPunchCards || (this.userPunchCards && this.userPunchCards[0] == undefined)) {
                    this.selectMarkData.userName = this.userName;
                    this.getUserMounthNulls();
                    this.getUserMarkData();//获取打卡备注
                    this.getCZWJ();//获取迟到早退未打卡加班内容集合
                }
            },
            selectMonthData: function () {
                var thisMonthNum = parseInt(this.selectMonth);
                if (thisMonthNum <= 0 || thisMonthNum > 12) {
                    return helper.toolTipBox("请正确选择月份");
                }
                //这里进行数据获取
                this.userMounths = [];
                this.userMounthNullCount = 0;
                var thisMonth = localStorage.getItem(this.selectMonth);
                var _self = this;
                if (thisMonth) {
                    thisMonth = JSON.parse(thisMonth);
                    this.userPunchCards = thisMonth;
                    this.selectUserName();
                    return;
                }
                var req = $.ajax({
                    type: 'GET',
                    url: bhConfig.GetMonthData,
                    data: { monthNum: thisMonthNum },
                    dataType: "JSON",
                    cache: false
                });
                req.done(function (res) {
                    if (res == null || res == "") {
                        return helper.toolTipBox("操作失败");
                    }
                    if (!res.MsgStatus) {
                        _self.getUserMounthNulls();
                        _self.getUserMarkData();//获取打卡备注
                        _self.getCZWJ();//获取迟到早退未打卡加班内容集合
                        return helper.toolTipBox(res.MsgContent);
                    }
                    localStorage.setItem(_self.selectMonth, JSON.stringify(res.MsgContent));
                    _self.userPunchCards = res.MsgContent;
                    _self.selectUserName();
                });
            },
            getUserMounthNulls: function () {
                this.userMounthNulls = {};
                if (this.userPunchCards && this.selectMonth > 0 && this.selectMonth <= 12) {
                    var selectMonth = this.selectMonth;
                    var selectYear = this.selectMarkData.year;
                    var days = moment(selectYear + "-" + selectMonth, "YYYY-MM").daysInMonth();
                    var userMounthNulls = {};
                    var firstDayOfWeek = moment(selectYear + "-" + selectMonth + "-01", "YYYY-MM-DD").format('d');
                    firstDayOfWeek = firstDayOfWeek == 0 ? 7 : firstDayOfWeek;
                    userMounthNulls.nullDays = firstDayOfWeek-1;
                    userMounthNulls.dayNum = days;
                    this.userMounthNulls = $.extend({},userMounthNulls);
                }
            },
            saveMark: function () {
                var _self = this;
                var dt = $.extend({}, this.addMarkData);
                dt.UserName = this.userName;
                //var temporary = this.userPunchCards[this.userName];
                //if (temporary == undefined || temporary == null || temporary['day_1'].day != 1) {
                //    return helper.toolTipBox("错误用户名！");
                //}
                dt.__RequestVerificationToken = __RequestVerificationToken;
                if (dt.AttendanceId == -1 || dt.markIUD == -1 || dt.TimeSlot == -1 || dt.UDayStateId == -1) {
                    dt.AttendanceId = null;
                }
                if (dt.UserId == -1) {
                    dt.UserId = null;
                }
                var req = $.ajax({
                    type: 'POST',
                    url: bhConfig.EditMarkStatus,
                    data: dt,
                    dataType: "JSON",
                    cache: false
                });
                req.done(function (res) {
                    if (res == null || res == "") {
                        return helper.toolTipBox("操作失败");
                    }
                    return helper.toolTipBox(res.MsgContent);
                });
                req.always(function () {
                    _self.getUserMarkData();
                });
            },
            selectMark: function (val, index,out) {
                this.addMarkData = $.extend({}, this.addMarkInit);
                if (val.day && val.day > 0 && val.day < 32) {
                    if ((val.status == 1||val.status==2 )&& out != undefined&&out== 1) {
                        return;
                    }
                    var dayTimeTP = moment(this.selectMarkData.year + '-' + this.selectMonth + '-' + val.day).format('YYYY-MM-DD');
                    this.addMarkData.ClockTime = dayTimeTP;
                    this.showSingleDayRemark = [];
                    if (this.markDatas != [] && this.markDatas.length > 0) {
                        this.showSingleDayRemark = this.markDatas.filter(function (item) {
                            return item.ClockTime == dayTimeTP;
                        });
                    }

                    if (!this.addMarkData.ClockTime) {
                        return;
                    }
                    this.addMarkData.TimeSlot = index;
                    if (index == 0) {
                        if (this.showSingleDayRemark == undefined || this.showSingleDayRemark == [] || this.showSingleDayRemark == null || this.showSingleDayRemark[0] == undefined) {
                            return this.editMark(true);
                        }
                        var mList = this.showSingleDayRemark.filter(function (item) {
                            return item.TimeSlot == 0;
                        });
                        if (mList != null && mList != undefined && mList.length == 1) {
                            return this.editMark(false, mList[0]);
                        }
                    }
                    if (index == 1) {
                        var mList = this.showSingleDayRemark.filter(function (item) {
                            return item.TimeSlot == 1;
                        });
                        if (val.UserLeft && (val.UserLeft.status == 1 || val.UserLeft.status == 2))
                            return;
                        //this.addMarkData.UDayStateId = 1;
                        if (mList != null && mList != undefined && mList.length == 1)
                            return this.editMark(false, mList[0])
                        return this.editMark(true);
                    }
                    if (index == 2) {
                        var aList = this.showSingleDayRemark.filter(function (item) {
                            return item.TimeSlot == 2;
                        });
                        if (val.UserRight && (val.UserRight.status == 1 || val.UserRight.status == 2))
                            return;
                        if (aList != null && aList != undefined && aList.length == 1)
                            return this.editMark(false, aList[0]);
                        return this.editMark(true);
                    }
                }
            },
            selectMarkNull: function (day, index) {
                if (!day || day < 0 || day > 31 || index<0||index>2)
                    return;
                var dayTimeTP = moment(this.selectMarkData.year + '-' + this.selectMonth + '-' + day).format('YYYY-MM-DD');
                this.addMarkData.ClockTime = dayTimeTP;
                this.showSingleDayRemark = [];
                if (this.markDatas != [] && this.markDatas.length > 0) {
                    this.showSingleDayRemark = this.markDatas.filter(function (item) {
                        return item.ClockTime == dayTimeTP;
                    });
                }
                this.addMarkData.TimeSlot = index;
                if (!this.showSingleDayRemark || this.showSingleDayRemark[0] == undefined) {
                    return this.editMark(true);
                }
                var oneDayMark = this.showSingleDayRemark.filter(function (item) {
                    return item.TimeSlot == 0;
                });
                var leftDayMark = this.showSingleDayRemark.filter(function (item) {
                    return item.TimeSlot == 1;
                });
                var rightDayMark = this.showSingleDayRemark.filter(function (item) {
                    return item.TimeSlot == 2;
                });
                if (index == 0) {
                    if ((leftDayMark && leftDayMark[0] != undefined) || (rightDayMark && rightDayMark[0] != undefined))
                        return helper.toolTipBox("你已添加当天内的打卡备注，不能添加整天备注！");
                    if (oneDayMark && oneDayMark[0] != undefined)
                        return this.editMark(false, oneDayMark[0]);
                    else return this.editMark(true);
                } else if (index == 1) {
                    if (oneDayMark && oneDayMark[0] != undefined)
                        return helper.toolTipBox("当前整天已经添加备注，不能添加当天内的备注！");
                    if (leftDayMark && leftDayMark[0] != undefined)
                        return this.editMark(false, leftDayMark[0]);
                    else
                        return this.editMark(true);
                } else if (index == 2) {
                    if (oneDayMark&& oneDayMark[0] != undefined)
                        return helper.toolTipBox("当前整天已经添加备注，不能添加当天内的备注！");
                    if (rightDayMark && rightDayMark[0] != undefined)
                        return this.editMark(false, rightDayMark[0]);
                    else
                        return this.editMark(true);
                }
            },
            editMark: function (isAdd, data) {
                if (isAdd) {
                    $('#editMark-header').text('新增--备注说明');
                    this.addMarkData.markIUD = 1;
                } else {
                    $('#editMark-header').text('修改--备注说明');
                    $.extend(this.addMarkData, data);
                    this.addMarkData.markIUD = 2;
                }
                $('#editMark').modal('show');

                initBind(this);
            },
            getUserMarkData: function () {
                var _self = this;
                this.markDatas = [];
                var req = $.ajax({
                    type: 'POST',
                    url: bhConfig.GetUserMarkData,
                    data: this.selectMarkData,
                    dataType: 'JSON',
                    cache: false
                });
                req.done(function (res) {
                    if (res == null || res == "") {
                        return;
                    }
                    if (res.MsgStatus)
                        _self.markDatas = res.MsgContent;
                });
                req.always(function () {
                    $('.body-Day .titlec')
                        .popup({
                            inline: false
                        });
                });
            },
            isMarkData: function (val, solt) {
                var item = this.isMarkData2(val, solt);
                if (item == 0)
                    return false;
                return true;
            },
            isMarkDataNull: function (val, solt,isZhu) {
                var child = {};
                child.day = val;
                var item = this.isMarkData2(child, -1);
                if (item && item[0] != undefined) {
                    var itemChild = item.filter(function (itemed) {
                        return itemed.TimeSlot == solt;
                    });
                    if (isZhu) return true;
                    if (itemChild && itemChild[0] != undefined)
                        return true;
                }
                return false;
            },
            isMarkData2: function (val, solt) {
                if (val.day && val.day > 0 && val.day < 32) {
                    if (this.markDatas && this.markDatas.length > 0) {
                        var dayTimeTP = moment(this.selectMarkData.year + '-' + this.selectMonth + '-' + val.day).format('YYYY-MM-DD');
                        var nowMarkData = this.markDatas.filter(function (item) {
                            return item.ClockTime == dayTimeTP;
                        });
                        if (nowMarkData && nowMarkData.length > 0) {
                            if (solt == -1) {
                                return nowMarkData;
                            }
                            var nowMarkData2 = nowMarkData.filter(function (item) {
                                return item.TimeSlot == solt;
                            });
                            if (nowMarkData2 && nowMarkData2.length > 0)
                                return nowMarkData2;
                        }
                    }
                }
                return 0;
            },
            deleteMarkData: function (val, solt, isNull) {
                var child = {};
                if (isNull)
                    child.day = val;
                else
                    child = val;
                var _self = this;
                dialog({
                    title: '删除提示',
                    content: '你确定要删除此条备注?',
                    ok: function () {
                        var item = _self.isMarkData2(child, solt);
                        if (item == 0)
                            return helper.toolTipBox("数据错误");
                        if (item && item.length > 0) {
                            _self.addMarkData = item[0];
                            _self.addMarkData.markIUD = 0;
                            _self.saveMark();
                        }
                    },
                    cancel: function () {
                    }
                }).show();
            },
            getMarkTitle: function (val, solt, isNull) {
                var child = {};
                if (isNull)
                    child.day = val;
                else
                    child = val;
                var item = this.isMarkData2(child, solt);
                if (item) {
                    var con = item[0].ClockContent == null ? '无备注内容' : item[0].ClockContent;
                    return this.markStateList[item[0].UDayStateId] +
                        ' | ' + con + ' | ' + this.isPassList[item[0].IsPass];
                }
                return '';
            },
            getIsPass: function (val, solt) {
                var item = this.isMarkData2(val, solt);
                if (item)
                    return item[0].IsPass;
                return 0;
            },
            getIsPassNull: function (val, solt) {
                var child = {};
                child.day = val;
                var item = this.isMarkData2(child, -1);
                if (item && item[0] != undefined) {
                    var itemChild = item.filter(function (itemed) {
                        return itemed.TimeSlot == solt;
                    });
                    if (itemChild && itemChild[0] != undefined)
                        return itemChild[0].IsPass;
                }
                return 0;
            },
            dayMark: function (item) {
                if (item == -3) {
                    return this.cssMarkList[1];
                } else if (item == -2) {
                    return this.cssMarkList[2];
                } else if (item == -1) {
                    return this.cssMarkList[2];
                } else if (item == 0) {
                    return this.cssMarkList[3];
                }
            },
            getCZWJ: function (item) {
                var list = $.extend({}, this.userMounths);
                var chidao = 0, zaotui = 0, zaoxiaban = 0, weidaka = 0, jiaban = 0, zhengtianweidaka = 0, oneMonthCount = 0;
                for (val in list) {
                    var child = list[val];
                    if (child.status == 1) {
                        oneMonthCount++;
                        if (child.UserLeft == undefined || child.UserLeft == null)
                            weidaka++;
                        else if (child.UserLeft.status == -3)
                            chidao++;
                        else if (child.UserLeft.status == -2)
                            zaotui++;
                        else if (child.UserLeft.status == -1)
                            zaoxiaban++;
                        else if (child.UserLeft.status == 0)
                            weidaka++;
                        else if (child.UserLeft.status == 2)
                            jiaban++;

                        if (child.UserRight == undefined || child.UserRight == null)
                            weidaka++;
                        else if (child.UserRight.status == -3)
                            chidao++;
                        else if (child.UserRight.status == -2)
                            zaotui++;
                        else if (child.UserRight.status == -1)
                            zaoxiaban++;
                        else if (child.UserRight.status == 0)
                            weidaka++;
                        else if (child.UserRight.status == 2)
                            jiaban++;
                    } else if (child.status == 0) {
                        zhengtianweidaka++;
                        oneMonthCount++;
                    }
                }
                this.dk.chidao = chidao;
                this.dk.zaotui = zaotui;
                this.dk.zaoxiaban = zaoxiaban;
                this.dk.weidaka = weidaka;
                this.dk.zhengtianweidaka = zhengtianweidaka;
                this.dk.jiaban = jiaban;
                this.dk.oneMonthCount = oneMonthCount * 2;
            },
            showAddLeave: function () {
                helper.toolTipBox("请假功能暂未开发");
            }
        }
    });
    $(function () {
        $('#selectMonth').dropdown('set value', vm.selectMonth);
        $('#selectMonth').dropdown('setting', 'onChange', function (val) {
            if (vm.selectMonth != parseInt(val)) {
                vm.selectMonth = parseInt(val);
            }
        });
    });
</script>
<% include footer %>